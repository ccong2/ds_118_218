{
  "hash": "5fb912b091eddc4940eb42bc53ac8e4d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data Visualization with ![](../img/Rlogo.png){width=60px}\"\nsubtitle: <span style=\"color:#2C3E50\">11.118/11.218 Applied Data Science for Cities</span>\ndate: \"Last Updated 2025-09-23\"\nformat: html\neditor: visual\nexecute: \n  warning: false\n---\n\n\n\n\n# Overview\n\nThis week, we’ll use real-world data to do an independent, mini visualization project. You’ll practice with data cleaning and visualization, and have more flexibility to use the tools you’ve learned so far to explore questions that you are interested in.\n\n# Study Topic\n\n[Inside Airbnb](https://insideairbnb.com/) is a publicly available dataset built through web scraping of Airbnb’s platform. The website was created by [a group of housing activists](https://insideairbnb.com/about/) as a way to bring transparency to the impact of short-term rentals on cities around the world.\n\nThe main motivation for compiling this resource is rooted in the tension between the growth of short-term rental platforms and the long-term housing market. Advocates point out that when homes are repurposed for short-term rentals, it pratically reduces the availability of affordable housing, while also driving up rental costs and adding displacement pressure on local communities.\n\nFrom the [Get the Data](https://insideairbnb.com/get-the-data/) page on Inside Airbnb, you’ll find datasets covering many cities around the world. Let's take a closer look at what the data provides and how it can help us better understand the activities and impacts of Airbnb short-term rentals.\n\n# Understand the data\n\nAs with previous labs, start by creating a working folder for Lab 3 and set up a new R Project inside it. You can experiment with code in a regular R script first. Later, in the Exercise section, we’ll bring everything together by creating a Quarto document to compile your final report.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(gt)\n```\n:::\n\n\n\n\nFrom the \"Get the Data\" page, search for **Boston**. You’ll see **a list of files with descriptions** under \"Boston, Massachusetts, United States\". The first file, **`listings.csv.gz`** is **\"Detailed Listings data\"**. It contains raw information scraped directly from Airbnb’s website. Download this file into your data folder of your project.\n\nThe dataset is provided in **.gz** format (a compressed file), but fear not, `read_csv()` is powerful enough to read and decompress it automatically.\n\n\n\n\n\n```{.default}\nairbnb <- read_csv(\"listings.csv.gz\")\n```\n\n\n\n\n\n\nLet's look through the 79 variables included in the dataset along with the [Data Dictionary](https://docs.google.com/spreadsheets/d/1iWCNJcSutYqpULSQHlNyGInUvHg2BoUGoNRIGa6Szc4/edit?usp=sharing). Try to understand what each one means and what it tells you about a property.\n\n**While you are browsing, please write down 3-5 questions you are curious about.** If you want to explore the activity and impact of short-term rentals in a city, what questions might you ask, and which variables in this dataset could help answer them?\n\nHere are a few ideas to get you started:\n\n-   *Listing type:* Inside Airbnb notes that \"the majority of Airbnb listings in most cities are **entire homes**, many of which are rented all year round, disrupting housing and communities\". How many properties in Boston are entire homes in this dataset?\n\n-   *Activity and income:* Availability, price, and number of reviews can be used to estimate nights booked in the past 12 months. How many listings are rented frequently, and does Airbnb revenue encourage short-term rentals over long-term housing?\n\n-   *Regulations:* Cities often have rules limiting short-term rentals. For example, in Boston, [rentals under 28 days are regulated](https://www.boston.gov/departments/inspectional-services/short-term-rentals). Can minimum night settings in Airbnb properties inform us any host reponses to local regulations?\n\n-   *Multiple listings per host:* Some hosts manage multiple listings, but they are more likely to run a business, may not live in the property, and could be violating short-term rental rules meant to protect housing. [A report](https://www.urban.org/urban-wire/abundance-short-term-rentals-who-wins-and-who-loses) shows on average, 64% of Airbnb hosts hold multiple local listings. How is the multiple listing situation in Boston?\n\nUse these examples as a guide to draft your own specific questions. In the rest of the tutorial, we’ll work with the Boston dataset to organize some variables and walk through a few visualization examples. But I won’t answer all of these questions. Later, you’ll explore a different city, figure out how to answer your own questions, and use visualizations to present your findings and insights.\n\n# Prepare the data\n\n## Work with character using `stringr`\n\nWe have have a `price` variable in the data, but you will find (e.g., with `glimpse(airbnb)`) that the prices are stored as **characters, not numbers**.\n\nConverting functions like `as.numeric()` won’t work directly here because the prices include a dollar sign (\\$) and commas, like this: \"\\$1,200,000\". We first need to modify the strings to remove the dollar signs and commas, before we can convert them to numeric prices and calculate them.\n\nThe `stringr` package, which is part of the `tidyverse`, specializes in working with strings (i.e., text or character data). In general, we can use it to replace certain symbols with an empty string (\"\"), effectively removing them from our data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_replace(string = \"$1,200\", pattern = \",\", replacement = \"\") \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"$1200\"\n```\n\n\n:::\n:::\n\n\n\n\nOr if use `str_replace_all()`, it can detect and remove multiple symbols simultaneously, by wrapping them in brackets\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr_replace_all(string = \"$1,200.00\", pattern =  \"[$,]\", replacement = \"\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1200.00\"\n```\n\n\n:::\n:::\n\n\n\n\nHere we **make a small dataset** focusing on property types and price, then clean up the price representations:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_price <- airbnb |> \n  select(id, room_type, price) |> \n  mutate(price = str_replace_all(string = price, \n                                 pattern = \"[$,]\", \n                                 replacement = \"\")) |> \n  mutate(price = as.numeric(price))\n```\n:::\n\n\n\n\nThere are four unique types of room types:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(df_price$room_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Entire home/apt\" \"Private room\"    \"Shared room\"     \"Hotel room\"     \n```\n\n\n:::\n:::\n\n\n\n\nThen we can create a bar chart that displays the median price for each type of property.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_price |> \n  filter(price < 10000) |>  \n  group_by(room_type) |> \n  summarise(median_price = median(price, na.rm = TRUE)) |> \n  ggplot() + \n    geom_col(aes(x = room_type, y = median_price), \n             fill = \"#62A0CA\", width = 0.5) + \n  theme_bw()+\n  labs(x = \"Room Type\", y = \"Median Price\")\n```\n\n::: {.cell-output-display}\n![](lab3_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\nNote: Check what that `filter` line does. Why is it included? If you were conducting this analysis, would you use it?\n\nWe have talked about **`plotly` and its `ggplot2` integration** in class. We can easily turn a static graph into an interactive plot using `ggplotly()`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- df_price |> \n  filter(price < 10000) |>  \n  group_by(room_type) |> \n  summarise(median_price = median(price, na.rm = TRUE)) |> \n  ggplot() + \n    geom_col(aes(x = room_type, y = median_price), \n             fill = \"#62A0CA\", width = 0.5) + \n  theme_bw()+\n  labs(x = \"Room Type\", y = \"Median Price\")\n\ng |> ggplotly()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-08b78b67dacf4d8f6182\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-08b78b67dacf4d8f6182\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":[0.5,0.5,0.5,0.5],\"base\":[0,0,0,0],\"x\":[1,2,3,4],\"y\":[240,269,75,59.5],\"text\":[\"room_type: Entire home/apt<br />median_price: 240.0\",\"room_type: Hotel room<br />median_price: 269.0\",\"room_type: Private room<br />median_price:  75.0\",\"room_type: Shared room<br />median_price:  59.5\"],\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(98,160,202,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":26.228310502283104,\"r\":7.3059360730593621,\"b\":40.182648401826491,\"l\":43.105022831050235},\"plot_bgcolor\":\"rgba(255,255,255,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,4.5999999999999996],\"tickmode\":\"array\",\"ticktext\":[\"Entire home/apt\",\"Hotel room\",\"Private room\",\"Shared room\"],\"tickvals\":[1,2,3,4],\"categoryorder\":\"array\",\"categoryarray\":[\"Entire home/apt\",\"Hotel room\",\"Private room\",\"Shared room\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Room Type\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-13.450000000000001,282.44999999999999],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"100\",\"200\"],\"tickvals\":[0,100,200],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"100\",\"200\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.6529680365296811,\"tickwidth\":0.66417600664176002,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Median Price\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176002,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"layer\":\"below\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":\"rgba(255,255,255,1)\",\"bordercolor\":\"transparent\",\"borderwidth\":1.8897637795275593,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"13284cdb12e0\":{\"x\":{},\"y\":{},\"type\":\"bar\"}},\"cur_data\":\"13284cdb12e0\",\"visdat\":{\"13284cdb12e0\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n## Working with dates using `lubridate`\n\nThe Airbnb dataset includes several date-related columns, such as `host_since`. From `glimpse(airbnb)`, we can see that these columns are already stored as date variables.\n\nThe `lubridate` package is commonly used for 1) converting text data into date formats, and 2) extracting components from dates, such as year, month, or day.\n\nLet's **make another smaller dataset** that includes the listing ID and when the host was first listed (`host_since`). We can extract the year from it for further analysis. So that you can see how many hostes started in each year.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_since <- airbnb |> \n  select(id, host_since) |>  \n  mutate(host_since_year = year(host_since)) \n```\n:::\n\n\n\n\n`ggplotly()` is easy for us to use, and saves us from having to learn a new set of `plotly` grammar. However, for certain chart types, like pie charts or donut charts, **`plotly`’s native functions** can be simpler to work with directly.\n\nSimilarly to ggplot, you initiate a `plotly` graph by calling `plot_ly()` (notice the `_` is needed). Then, map the appropriate columns to the correct arguments, specifying which **values** to plot and which **labels** should be displayed.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_since |> \n  count(host_since_year) |> \n  plot_ly(\n    labels = ~host_since_year,\n    values = ~n,\n    type = \"pie\",\n    hole = 0.5 # the size of the \"hole\", which practically turn a pie into a donut\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-a807d9c4029214242437\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-a807d9c4029214242437\">{\"x\":{\"visdat\":{\"132828aa3734\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"132828aa3734\",\"attrs\":{\"132828aa3734\":{\"labels\":{},\"values\":{},\"hole\":0.5,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"pie\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"labels\":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025],\"values\":[1,32,95,116,155,237,548,459,759,359,310,298,360,171,101,348,155,56],\"hole\":0.5,\"type\":\"pie\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(255,255,255,1)\"}},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\nAlthough, a donut chart might not be the best choice for this particular question, since it can become visually cluttered when there are too many segments. Check out the \"treemap\" instead:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_since |> \n  count(host_since_year) |> \n  plot_ly(\n    labels = ~host_since_year,\n    values = ~n,\n    type = \"treemap\",\n    parents = \"\"   # No hierarchy, just one level\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-8147dbb683873a4e5a01\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8147dbb683873a4e5a01\">{\"x\":{\"visdat\":{\"13284f1682b\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"13284f1682b\",\"attrs\":{\"13284f1682b\":{\"labels\":{},\"values\":{},\"parents\":\"\",\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"treemap\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"labels\":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021,2022,2023,2024,2025],\"values\":[1,32,95,116,155,237,548,459,759,359,310,298,360,171,101,348,155,56],\"parents\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"type\":\"treemap\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(255,255,255,1)\"}},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n# Create nicer tables using `gt`\n\nNot just for graphs, [many R packages](https://r-graph-gallery.com/table.html) can help you create professional and stylish **tables**. `gt` is one such package, and it integrates very smoothly with `tidyverse` syntax.\n\nSuppose I'm planning a trip to Boston and want to stay in the \"Allston\" neighborhood. I decide to dig into the Airbnb dataset to find hosts who have both good ratings and are actively getting reviews.\n\nIn the following code, I begin by identifying relevant variables and then pulled out another small dataset. Next, I calculate how many reviews each host has received in the last 30 days, along with their average ratings.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_review <- airbnb |> \n  select(id, host_id, host_name, neighbourhood_cleansed,\n         number_of_reviews_l30d, review_scores_rating) \n\ntop_reviewed_hosts <- df_review |> \n  filter(neighbourhood_cleansed == \"Allston\") |> \n  group_by(host_id, host_name) |> \n  summarise(num_review = sum(number_of_reviews_l30d),\n            avg_rating = mean(review_scores_rating, na.rm = TRUE),\n            .groups = \"drop\") |> \n  # arrange by number of reviews and show the top 10\n  arrange(desc(num_review)) |> \n  head(10)\n\n\ntop_reviewed_hosts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n     host_id host_name       num_review avg_rating\n       <dbl> <chr>                <dbl>      <dbl>\n 1  15154687 Taskin                  31       4.73\n 2  47584294 Jessy And Diego         16       4.86\n 3 307979339 Aziz                    14       4.56\n 4  18409308 Marlene                 10       4.99\n 5  26956083 Todd                    10       4.81\n 6 657106909 Wenjia                   8       4.25\n 7  10250028 Mingzhou                 7       4.92\n 8 147418936 Dana And Andrew          6       4.5 \n 9 194167208 Reina                    6       4.92\n10    757253 Lee                      5       4.93\n```\n\n\n:::\n:::\n\n\n\n\nJust like `ggplotly()`, `gt` is also one line away to make a table more formatted:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_reviewed_hosts |> gt()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"btqajckkzn\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#btqajckkzn table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#btqajckkzn thead, #btqajckkzn tbody, #btqajckkzn tfoot, #btqajckkzn tr, #btqajckkzn td, #btqajckkzn th {\n  border-style: none;\n}\n\n#btqajckkzn p {\n  margin: 0;\n  padding: 0;\n}\n\n#btqajckkzn .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#btqajckkzn .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#btqajckkzn .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#btqajckkzn .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#btqajckkzn .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#btqajckkzn .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#btqajckkzn .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#btqajckkzn .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#btqajckkzn .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#btqajckkzn .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#btqajckkzn .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#btqajckkzn .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#btqajckkzn .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#btqajckkzn .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#btqajckkzn .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#btqajckkzn .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#btqajckkzn .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#btqajckkzn .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#btqajckkzn .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#btqajckkzn .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#btqajckkzn .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#btqajckkzn .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#btqajckkzn .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#btqajckkzn .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#btqajckkzn .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#btqajckkzn .gt_left {\n  text-align: left;\n}\n\n#btqajckkzn .gt_center {\n  text-align: center;\n}\n\n#btqajckkzn .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#btqajckkzn .gt_font_normal {\n  font-weight: normal;\n}\n\n#btqajckkzn .gt_font_bold {\n  font-weight: bold;\n}\n\n#btqajckkzn .gt_font_italic {\n  font-style: italic;\n}\n\n#btqajckkzn .gt_super {\n  font-size: 65%;\n}\n\n#btqajckkzn .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#btqajckkzn .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#btqajckkzn .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#btqajckkzn .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#btqajckkzn .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#btqajckkzn .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#btqajckkzn .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#btqajckkzn .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#btqajckkzn div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"host_id\">host_id</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"host_name\">host_name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"num_review\">num_review</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"avg_rating\">avg_rating</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">15154687</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Taskin</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">31</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.728571</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">47584294</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Jessy And Diego</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">16</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.860000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">307979339</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Aziz</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">14</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.560000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">18409308</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Marlene</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">10</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.986667</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">26956083</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Todd</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">10</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.810000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">657106909</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Wenjia</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">8</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.250000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">10250028</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Mingzhou</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">7</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.920000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">147418936</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Dana And Andrew</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">6</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.500000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">194167208</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Reina</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">6</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.915000</td></tr>\n    <tr><td headers=\"host_id\" class=\"gt_row gt_right\">757253</td>\n<td headers=\"host_name\" class=\"gt_row gt_left\">Lee</td>\n<td headers=\"num_review\" class=\"gt_row gt_right\">5</td>\n<td headers=\"avg_rating\" class=\"gt_row gt_right\">4.932500</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\nTo make this table even clearer, I can use `gt` to add colorization based on column values. The following code may look long at first, but you can read it step by step: it first renames the columns for presentation (`rename`), then send it to `gt()`, sets up the table titles (`tab_header`), followed by applying the color range to the \"average rating\" column (`data_color`), and then applies the color range to the \"number of reviews\" column (`data_color`).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_reviewed_hosts |> \n  rename(\n    `Host ID` = host_id,\n    `Host Name` = host_name,\n    `# Reviews` = num_review,\n    `Rating` = avg_rating\n  ) |> \n  gt() |> \n  tab_header(\n    title = \"Top Reviewed Airbnb Hosts in the last 30 Days\",\n    subtitle = \"Allston, Boston\") |>\n  data_color(\n    columns = Rating,\n    fn = scales::col_numeric(\n      palette = c(\"white\", \"red\"),\n      domain  = range(top_reviewed_hosts$avg_rating)\n    )) |> \n  data_color(\n    columns = `# Reviews`,\n    fn = scales::col_numeric(\n      palette = c(\"white\", \"red\"),\n      domain  = range(top_reviewed_hosts$num_review)\n    )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"naivkvknjv\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#naivkvknjv table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#naivkvknjv thead, #naivkvknjv tbody, #naivkvknjv tfoot, #naivkvknjv tr, #naivkvknjv td, #naivkvknjv th {\n  border-style: none;\n}\n\n#naivkvknjv p {\n  margin: 0;\n  padding: 0;\n}\n\n#naivkvknjv .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#naivkvknjv .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#naivkvknjv .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#naivkvknjv .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#naivkvknjv .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#naivkvknjv .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#naivkvknjv .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#naivkvknjv .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#naivkvknjv .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#naivkvknjv .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#naivkvknjv .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#naivkvknjv .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#naivkvknjv .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#naivkvknjv .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#naivkvknjv .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naivkvknjv .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#naivkvknjv .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#naivkvknjv .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#naivkvknjv .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naivkvknjv .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#naivkvknjv .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naivkvknjv .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#naivkvknjv .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naivkvknjv .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#naivkvknjv .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#naivkvknjv .gt_left {\n  text-align: left;\n}\n\n#naivkvknjv .gt_center {\n  text-align: center;\n}\n\n#naivkvknjv .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#naivkvknjv .gt_font_normal {\n  font-weight: normal;\n}\n\n#naivkvknjv .gt_font_bold {\n  font-weight: bold;\n}\n\n#naivkvknjv .gt_font_italic {\n  font-style: italic;\n}\n\n#naivkvknjv .gt_super {\n  font-size: 65%;\n}\n\n#naivkvknjv .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#naivkvknjv .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#naivkvknjv .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#naivkvknjv .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#naivkvknjv .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#naivkvknjv .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#naivkvknjv .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#naivkvknjv .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#naivkvknjv div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_title gt_font_normal\" style>Top Reviewed Airbnb Hosts in the last 30 Days</td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"4\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>Allston, Boston</td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Host-ID\">Host ID</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Host-Name\">Host Name</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"a#-Reviews\"># Reviews</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"Rating\">Rating</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">15154687</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Taskin</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FF0000; color: #FFFFFF;\">31</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF7F5E; color: #000000;\">4.728571</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">47584294</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Jessy And Diego</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFAD94; color: #000000;\">16</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF5434; color: #FFFFFF;\">4.860000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">307979339</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Aziz</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFBDA7; color: #000000;\">14</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FFAE94; color: #000000;\">4.560000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">18409308</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Marlene</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFDACD; color: #000000;\">10</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF0000; color: #FFFFFF;\">4.986667</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">26956083</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Todd</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFDACD; color: #000000;\">10</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF6544; color: #FFFFFF;\">4.810000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">657106909</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Wenjia</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFE9E1; color: #000000;\">8</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FFFFFF; color: #000000;\">4.250000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">10250028</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Mingzhou</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFF0EB; color: #000000;\">7</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF3A1F; color: #FFFFFF;\">4.920000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">147418936</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Dana And Andrew</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFF8F5; color: #000000;\">6</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FFBEA8; color: #000000;\">4.500000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">194167208</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Reina</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFF8F5; color: #000000;\">6</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF3D21; color: #FFFFFF;\">4.915000</td></tr>\n    <tr><td headers=\"Host ID\" class=\"gt_row gt_right\">757253</td>\n<td headers=\"Host Name\" class=\"gt_row gt_left\">Lee</td>\n<td headers=\"# Reviews\" class=\"gt_row gt_right\" style=\"background-color: #FFFFFF; color: #000000;\">5</td>\n<td headers=\"Rating\" class=\"gt_row gt_right\" style=\"background-color: #FF341A; color: #FFFFFF;\">4.932500</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n\nOnce I identify the 10 hosts who received the most reviews in the last 30 days, along with their average ratings, I get a better sense of who are most likely to offer the best guest experience.\n\n## A note on data organization: combining datasets\n\nWhen exploring a dataset, we often work with a few variable combinations and may create several smaller datasets for convenience. At some point, we might want to bring two pieces back together.\n\nTo make this possible, we’ve intentionally kept an identifiable variable (`id`, in our case) in all these small datasets. This allows us to combine them using `left_join()`. The `left_join()` function merges two datasets by a shared key column, keeping all rows from the left and adding any matching rows from the right.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- left_join(df_price, df_since, by = \"id\")\n```\n:::\n\n\n\n\n# Find resources and learn more\n\nSo far, we’ve introduced you to many different functions, arguments, and ways to accomplish visualization tasks in R. You might be wondering: how will I remember all of this? Is there a pool of resources I can rely on?\n\nA general guide on where to find help and inspiration:\n\n-   *Your own experience.* Everything you’ve done so far counts as a resource. The code you’ve written, the research you’ve done, and the exploration you’ve carried out to make your code work all build into your personal knowledge and intuition.\n\n-   *R help functions and documentation.* Don’t forget that R has built-in help. Use `?`function_name to get details on any function. [R cheat sheets](https://posit.co/resources/cheatsheets/) are also extremely handy for quick reference.\n\n-   *Graphing libraries and galleries*. Packages like [ggplot2](https://r-graph-gallery.com/) and [plotly](https://plotly.com/ggplot2/) come with galleries of examples, complete with code. By now, you should be able to read and modify much of this code to fit your own needs.\n\n-   *Community examples and published code snippets.* If you come across someone else’s work that serves as a good example, take time to study the code, understand how it works, and consider how you might adapt it for your own project.\n\n# Lab Report\n\nThis week you’ll do a **preliminary Airbnb data study** on a city of your choice. We will work in a **Quarto document**, so your narrative, code, and outputs are all organized in one place. You'll start by revisiting the questions you drafted earlier, then use visualizations to explore and answer them.\n\n**What to do:**\n\n1.  Choose a city. Please avoid Boston this time. Pick another city from the list. This could be your hometown or a tourist destination you're interested in.\n\n2.  Finalize 3 questions to guide your study. You may find yourself revisiting or adjusting your draft questions, that’s perfectly fine. Refine them as you go.\n\n3.  Create at least one visualization (graph or table) to answer each question.\n\n> You will probably work through this in two phases:\n>\n> Phase 1: Explore the dataset. See what variables are useful for you, how they are distributed, and whether there are any data quality issues or surprising relationships. Do some quick checks for completeness and consistency.\n>\n> Phase 2: Investigate each of your three questions. Start with an initial visualization, then refine it (e.g., add colors, adjust scales, filter or subset data). Use this process to deepen your insights. As you work, new questions may come up. Feel free to follow them with additional visualizations until you feel satisfied with your understanding.\n\n4.  Write explanatory text to describe your intentions, methods, and findings for each of the three questions.\n\n5.  Submit a report that reflects your thoughtful coding and clear storytelling.\n\nWe are not looking for the “right answer,” and there may not be answer keys for your specific questions. The goal is for you to apply what we’ve practiced: using visualizations, adapting code to new problems, and demonstrating your critical thinking on a certain topic. We will use \"Lab 3 Rubric\" posted on Canvas for grading this report, and your work will be carefully read for thoughtful analysis and clear communication.\n\n**Submission**\n\nPlease complete your Quarto document and upload your rendered HTML file to Canvas by **9am, Wednesday, Oct 1.**\n",
    "supporting": [
      "lab3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/plotly-binding-4.11.0/plotly.js\"></script>\n<script src=\"../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}